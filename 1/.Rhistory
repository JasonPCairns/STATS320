library(Rlab)
install.packages(Rlab)
install.packages("Rlab")
library(Rlab)
minechain <- function(N){
times <- rep(NA,N)
for(i in 1:N){
safe <- FALSE
time <- 0
while(safe == FALSE){
door <- sample (3, size =1)
if(door == 1){
safe <- TRUE
time <- time + 1
}
if(door == 2){
time <- time + 2
}
if(door == 3){
time <- time + 3
}
}
times[i] <- time
}
return (mean(times))
}
minechain(1000)
minechain(1000)
minechain(1000)
minechain(1000)
minechain(1000)
pubchain <- function(N){
total.home = 0
for (i in 1:N){
at.home <- FALSE
at.pub <- FALSE
step.net <- 0
while(at.home == FALSE & at.pub == FALSE){
# each step is a randam variable with bernoulli distribution, success (1) being forward, failure (0) being backward
step <-  rbern(1,0.7)
if (step == 1){
step.net <- step.net +1
} else {
step.net <- step.net - 1
}
if (step.net == 20){
at.home <- TRUE
total.home <- total.home + 1
}
if (step.net == -1){
at.pub <- TRUE
}
}
}
return (total.home/N)
}
pubchain(1000)
pubchain(1000)
pubchain(1000)
pubchain(1000)
pubchain(1000)
pubchain(1000)
pubchain(1000)
pubchain(1000)
pubchain(1000)
pubchain(1000)
pubchain(10000)
pubchain(10000)
pubchain(10000)
pubchain(10000)
pubchain(10000)
pubchain(10000)
pubchain(10000)
pubchain(10000)
pubchain(10000)
pubchain(10000)
pubchain(10000)
pubchain(10000)
pubchain(100000)
pubchain(100000)
minechain(10000)
minechain(10000)
minechain(100000)
minechain(100000)
minechain(100000)
minechain(100000)
minechain(100000)
install.packages("tinytex")
